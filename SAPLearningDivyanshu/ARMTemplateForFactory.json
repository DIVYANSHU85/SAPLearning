{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "SAPLearningDivyanshu"
		},
		"SAPFunctional_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SAPFunctional'"
		},
		"SAPFunctional_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SAPFunctional'"
		},
		"SAPFunctionalTable_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SAPFunctionalTable'"
		},
		"SAPFunctional_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "DESKTOP-LIH9UQE\\divkr"
		},
		"SAPFunctionalTable_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "100"
		},
		"SAPFunctionalTable_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "kjoshi"
		},
		"SAPFunctionalTable_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "fas.cognitusconsulting.com"
		},
		"SAPFunctionalTable_properties_typeProperties_systemNumber": {
			"type": "string",
			"defaultValue": "01"
		},
		"SharedSelfIR_properties_typeProperties_linkedInfo_resourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/e4949961-e46f-4f60-bf96-032154cb62b7/resourcegroups/TestEnvironment/providers/Microsoft.DataFactory/factories/ADFDemoDivyanshu/integrationruntimes/selfHostedIRnew"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_SAP_DeltaLoad')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_SAPDeltaTable",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT * FROM dbo.SAP_Lookup WHERE LoadType = 'Delta'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "LookUpTable",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "FE_DeltaLoad",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LK_SAPDeltaTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LK_SAPDeltaTable').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "CP_SAPtoStg",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SapTableSource",
											"rfcTableOptions": {
												"value": "@{item().DeltaCondition}",
												"type": "Expression"
											},
											"customRfcReadTableFunctionModule": "",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlServerSink",
											"preCopyScript": {
												"value": "@{concat('IF OBJECT_ID(','''',item().SinkSchemaName,'.',item().SinkTableName,'''',') IS NOT NULL\nTRUNCATE TABLE ',item().SinkSchemaName,'.',item().SinkTableName)}",
												"type": "Expression"
											},
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "SapTable",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item().SourceTableName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_DeltaTable",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchemaName": {
													"value": "@item().SinkSchemaName",
													"type": "Expression"
												},
												"SinkTableName": {
													"value": "@item().SinkTableName",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "SP_DeltaLoad",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "CP_SAPtoStg",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_LoadTypeDeltaSTGtoDBO]",
										"storedProcedureParameters": {
											"SourceTableName": {
												"value": {
													"value": "@item().SourceTableName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SAPFunctional",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "SP_UpdateDeltaCondition",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "SP_DeltaLoad",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_UpdateDeltaCondition]",
										"storedProcedureParameters": {
											"ModifiedDate": {
												"value": {
													"value": "@pipeline().parameters.PipelineTriggerTime",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"SourceTableName": {
												"value": {
													"value": "@item().SourceTableName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SAPFunctional",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "LK_DependentTable",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "FE_DeltaLoad",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT * FROM dbo.SAP_Lookup WHERE LoadType = 'Dependent Delta'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "LookUpTable",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "FE_DependentDeltaLoad",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LK_DependentTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LK_DependentTable').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "CP_SourceToStgDependent",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "LK_DependentDeltaCondtion",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SapTableSource",
											"rfcTableOptions": {
												"value": "@{activity('LK_DependentDeltaCondtion').output.value[0].String}",
												"type": "Expression"
											},
											"customRfcReadTableFunctionModule": "",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlServerSink",
											"preCopyScript": {
												"value": "@{concat('IF OBJECT_ID(','''',item().SinkSchemaName,'.',item().SinkTableName,'''',') IS NOT NULL\nTRUNCATE TABLE ',item().SinkSchemaName,'.',item().SinkTableName)}",
												"type": "Expression"
											},
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "SapTable",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item().SourceTableName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_DependentTable",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": {
													"value": "@item().SinkSchemaName",
													"type": "Expression"
												},
												"TableName": {
													"value": "@item().SinkTableName",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "SP_DependentDeltaLoad",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "CP_SourceToStgDependent",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_LoadTypeDeltaSTGtoDBO]",
										"storedProcedureParameters": {
											"SourceTableName": {
												"value": {
													"value": "@item().SourceTableName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SAPFunctional",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "LK_DependentDeltaCondtion",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@{concat('SELECT CONCAT(','''',item().PK_Column,' IN (','''',',','''''''''',',','(SELECT STRING_AGG(CONVERT(NVARCHAR(max)',',',item().PK_Column,')',',',''''''',''''''',') FROM ',item().SinkSchemaName,'.',item().DependentOn,')',',','''''''''',',',''')'')',' AS String')}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_DependentDeltaCondition",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "SP_UpdateMD",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "SP_DependentDeltaLoad",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_UpdateDeltaCondition]",
										"storedProcedureParameters": {
											"ModifiedDate": {
												"value": {
													"value": "@pipeline().parameters.PipelineTriggerTime",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"SourceTableName": {
												"value": {
													"value": "@item().SourceTableName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SAPFunctional",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"PipelineTriggerTime": {
						"type": "string"
					}
				},
				"variables": {
					"PipelineTriggerTime": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LookUpTable')]",
				"[concat(variables('factoryId'), '/datasets/SapTable')]",
				"[concat(variables('factoryId'), '/datasets/DS_DeltaTable')]",
				"[concat(variables('factoryId'), '/linkedServices/SAPFunctional')]",
				"[concat(variables('factoryId'), '/datasets/DS_DependentTable')]",
				"[concat(variables('factoryId'), '/datasets/DS_DependentDeltaCondition')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SAP_FullLoad')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_SAPFullTable",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT * FROM dbo.SAP_Lookup WHERE LoadType = 'Full'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "LookUpTable",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "FE_FullLoad",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LK_SAPFullTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LK_SAPFullTable').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "CP_Full_SourceToStg",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SapTableSource",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlServerSink",
											"preCopyScript": {
												"value": "@{concat('IF OBJECT_ID(','''',item().SinkSchemaName,'.',item().SinkTableName,'''',') IS NOT NULL\nTRUNCATE TABLE ',item().SinkSchemaName,'.',item().SinkTableName)}",
												"type": "Expression"
											},
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "SapTable",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item().SourceTableName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "FullLoadTable",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchemaName": {
													"value": "@item().SinkSchemaName",
													"type": "Expression"
												},
												"SinkTableName": {
													"value": "@item().SinkTableName",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "CP_Full_StgToDbo",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CP_Full_SourceToStg",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlServerSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "FullLoadTable",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchemaName": {
													"value": "@item().SinkSchemaName",
													"type": "Expression"
												},
												"SinkTableName": {
													"value": "@item().SinkTableName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "FullLoadDboTable",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item().SourceTableName",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "SP_ModifiedDate",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "CP_Full_StgToDbo",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_UpdateDeltaCondition]",
										"storedProcedureParameters": {
											"ModifiedDate": {
												"value": {
													"value": "@pipeline().parameters.PipelineTriggerTime",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"SourceTableName": {
												"value": {
													"value": "@item().SourceTableName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SAPFunctional",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"PipelineTriggerTime": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LookUpTable')]",
				"[concat(variables('factoryId'), '/datasets/SapTable')]",
				"[concat(variables('factoryId'), '/datasets/FullLoadTable')]",
				"[concat(variables('factoryId'), '/datasets/FullLoadDboTable')]",
				"[concat(variables('factoryId'), '/linkedServices/SAPFunctional')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SV_TriggerTime",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "PipelineTriggerTime",
							"value": {
								"value": "@pipeline().TriggerTime",
								"type": "Expression"
							}
						}
					},
					{
						"name": "EX_PL_SAP_FullLoad",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SV_TriggerTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SAP_FullLoad",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"PipelineTriggerTime": {
									"value": "@variables('PipelineTriggerTime')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "EX_PL_SAP_DeltaLoad",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SV_TriggerTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SAP_DeltaLoad",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"PipelineTriggerTime": {
									"value": "@variables('PipelineTriggerTime')",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"PipelineTriggerTime": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_SAP_FullLoad')]",
				"[concat(variables('factoryId'), '/pipelines/PL_SAP_DeltaLoad')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DeltaTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SAPFunctional",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SinkSchemaName": {
						"type": "string"
					},
					"SinkTableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SinkSchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().SinkTableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SAPFunctional')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DependentDeltaCondition')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SAPFunctional",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SAPFunctional')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FullLoadDboTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SAPFunctional",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SAPFunctional')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FullLoadTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SAPFunctional",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SinkSchemaName": {
						"type": "string"
					},
					"SinkTableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SinkSchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().SinkTableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SAPFunctional')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LookUpTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SAPFunctional",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "SAP_Lookup"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SAPFunctional')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SapTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SAPFunctionalTable",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SapTableResource",
				"schema": [],
				"typeProperties": {
					"tableName": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SAPFunctionalTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAPFunctional')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SAPFunctional_connectionString')]",
					"userName": "[parameters('SAPFunctional_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SAPFunctional_password')]"
					}
				},
				"connectVia": {
					"referenceName": "SharedSelfIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SharedSelfIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAPFunctionalTable')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SapTable",
				"typeProperties": {
					"clientId": "[parameters('SAPFunctionalTable_properties_typeProperties_clientId')]",
					"language": "",
					"sncMode": false,
					"userName": "[parameters('SAPFunctionalTable_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SAPFunctionalTable_password')]"
					},
					"server": "[parameters('SAPFunctionalTable_properties_typeProperties_server')]",
					"systemNumber": "[parameters('SAPFunctionalTable_properties_typeProperties_systemNumber')]"
				},
				"connectVia": {
					"referenceName": "SharedSelfIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SharedSelfIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SharedSelfIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {
					"linkedInfo": {
						"resourceId": "[parameters('SharedSelfIR_properties_typeProperties_linkedInfo_resourceId')]",
						"authorizationType": "Rbac"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DependentTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SAPFunctional",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SchemaName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SAPFunctional')]"
			]
		}
	]
}